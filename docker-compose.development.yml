version: '3'

services:
  recipes-api:
    container_name: recipes-api
    image: strapi:4.15.5
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.development
      args:
        API_ADMIN_JWT_SECRET: ${API_ADMIN_JWT_SECRET}
        API_APP_KEYS: ${API_APP_KEYS}
        API_AWS_ACCESS_KEY: ${API_AWS_ACCESS_KEY}
        API_AWS_BUCKET: ${API_AWS_BUCKET}
        API_AWS_REGION: ${API_AWS_REGION}
        API_AWS_SECRET_ACCESS_KEY: ${API_AWS_SECRET_ACCESS_KEY}
        API_HOST: ${API_HOST}
        API_JWT_SECRET: ${API_JWT_SECRET}
        API_PORT: ${API_PORT}
        API_TOKEN_SALT: ${API_TOKEN_SALT}
        API_TRANSFER_TOKEN_SALT: ${API_TRANSFER_TOKEN_SALT}
        API_URL: ${API_URL}
        DB_HOST: ${DB_HOST}
        DB_NAME: ${DB_NAME}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_PORT: ${DB_PORT}
        DB_USERNAME: ${DB_USERNAME}
        SEARCH_HOST: ${SEARCH_HOST}
        SEARCH_ADMIN_API_KEY: ${SEARCH_ADMIN_API_KEY}
        SEARCH_PORT: ${SEARCH_PORT}
        SEARCH_PROTOCOL: ${SEARCH_PROTOCOL}
        WEB_BASE_URL: ${WEB_BASE_URL}
        WEB_TOKEN: ${WEB_TOKEN}
    volumes:
      - ./apps/api/config:/app/apps/api/config
      - ./apps/api/public/uploads:/app/apps/api/public/uploads
      - ./apps/api/src:/app/apps/api/src
    restart: unless-stopped
    ports:
      - '1337:1337'
    networks:
      - recipes-network
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          '${API_PROTOCOL}://${API_HOST}:${API_PORT}/_health',
        ]
      interval: 5s
      retries: 10
      start_interval: 10s
      start_period: 60s
      timeout: 5s
    depends_on:
      - recipes-db
      - recipes-search

  recipes-db:
    container_name: recipes-db
    platform: linux/amd64
    image: postgres:16.1-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    volumes:
      - recipes-data:/var/lib/postgresql/data/
    restart: unless-stopped
    ports:
      - '5432:5432'
    networks:
      - recipes-network

  recipes-search:
    container_name: recipes-search
    image: getmeili/meilisearch:v1.5.0
    command: meilisearch
    environment:
      MEILI_MASTER_KEY: ${SEARCH_MASTER_KEY}
    volumes:
      - ../meilisearch/data.ms:/data.ms
    restart: unless-stopped
    ports:
      - '7700:7700'
    networks:
      - recipes-network

  recipes-web:
    container_name: recipes-web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.development
      args:
        API_AWS_BUCKET: ${API_AWS_BUCKET}
        API_AWS_REGION: ${API_AWS_REGION}
        API_HOST: ${API_HOST}
        API_PORT: ${API_PORT}
        API_PROTOCOL: ${API_PROTOCOL}
        API_TOKEN: ${API_TOKEN}
        NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED}
        SEARCH_HOST: ${SEARCH_HOST}
        SEARCH_API_KEY: ${SEARCH_API_KEY}
        SEARCH_PORT: ${SEARCH_PORT}
        SEARCH_PROTOCOL: ${SEARCH_PROTOCOL}
        WEB_BASE_URL: ${WEB_BASE_URL}
        WEB_COOKIEBOT_ID: ${WEB_COOKIEBOT_ID}
        WEB_GENERATE_STATIC_PARAMS: ${WEB_GENERATE_STATIC_PARAMS}
        WEB_GOOGLE_CLOUD_PROJECT_ID: ${WEB_GOOGLE_CLOUD_PROJECT_ID}
        WEB_GOOGLE_RECAPTCHA_API_KEY: ${WEB_GOOGLE_RECAPTCHA_API_KEY}
        WEB_GOOGLE_RECAPTCHA_SITE_KEY: ${WEB_GOOGLE_RECAPTCHA_SITE_KEY}
        WEB_GOOGLE_RECAPTCHA_SECRET_KEY: ${WEB_GOOGLE_RECAPTCHA_SECRET_KEY}
        WEB_GOOGLE_TAG_MANAGER_ID: ${WEB_GOOGLE_TAG_MANAGER_ID}
        WEB_TIME_ZONE: ${WEB_TIME_ZONE}
        WEB_TOKEN: ${WEB_TOKEN}
    volumes:
      - ./apps/web/messages:/app/apps/web/messages
      - ./apps/web/public:/app/apps/web/public
      - ./apps/web/src:/app/apps/web/src
      - ./packages/api-client/src:/app/packages/api-client/src
      - ./packages/ui/src:/app/packages/ui/src
    restart: always
    ports:
      - 3000:3000
    networks:
      - recipes-network
    depends_on:
      recipes-api:
        condition: service_healthy
        restart: true

volumes:
  recipes-data:

networks:
  recipes-network:
    driver: bridge
