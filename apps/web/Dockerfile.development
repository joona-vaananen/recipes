FROM node:18-alpine AS base

FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update

WORKDIR /app
RUN npm install --global turbo
COPY . .
RUN npx turbo prune @recipes/web --docker

FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app

COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/package-lock.json ./package-lock.json
RUN npm ci

COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

ARG API_HOST
ENV API_HOST=${API_HOST}
ARG API_PORT
ENV API_PORT=${API_PORT}
ARG API_PROTOCOL
ENV API_PROTOCOL=${API_PROTOCOL}
ARG API_TOKEN
ENV API_TOKEN=${API_TOKEN}
ARG NEXT_TELEMETRY_DISABLED
ENV NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}

RUN npx turbo run build --filter=@recipes/web...

FROM base AS runner
WORKDIR /app

COPY --from=installer /app .

ARG API_HOST
ENV API_HOST=${API_HOST}
ARG API_PORT
ENV API_PORT=${API_PORT}
ARG API_PROTOCOL
ENV API_PROTOCOL=${API_PROTOCOL}
ARG API_TOKEN
ENV API_TOKEN=${API_TOKEN}
ARG NEXT_TELEMETRY_DISABLED
ENV NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}

CMD npx turbo run dev --filter=@recipes/web...