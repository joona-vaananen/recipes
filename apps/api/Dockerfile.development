FROM node:20.9.0-alpine AS base

FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update

WORKDIR /app
RUN npm install --global turbo
COPY . .
RUN npx turbo prune @recipes/api --docker

FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app

COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/package-lock.json ./package-lock.json
RUN npm config set --global fetch-retry-maxtimeout 600000 && npm ci

COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

FROM base AS runner
WORKDIR /app

COPY --from=installer /app .

ARG API_ADMIN_JWT_SECRET
ENV API_ADMIN_JWT_SECRET=${API_ADMIN_JWT_SECRET}
ARG API_APP_KEYS
ENV API_APP_KEYS=${API_APP_KEYS}
ARG API_HOST
ENV API_HOST=${API_HOST}
ARG API_JWT_SECRET
ENV API_JWT_SECRET=${API_JWT_SECRET}
ARG API_PORT
ENV API_PORT=${API_PORT}
ARG API_TOKEN_SALT
ENV API_TOKEN_SALT=${API_TOKEN_SALT}
ARG API_TRANSFER_TOKEN_SALT
ENV API_TRANSFER_TOKEN_SALT=${API_TRANSFER_TOKEN_SALT}
ARG API_URL
ENV API_URL=${API_URL}
ARG DB_HOST
ENV DB_HOST=${DB_HOST}
ARG DB_NAME
ENV DB_NAME=${DB_NAME}
ARG DB_PASSWORD
ENV DB_PASSWORD=${DB_PASSWORD}
ARG DB_PORT
ENV DB_PORT=${DB_PORT}
ARG DB_USERNAME
ENV DB_USERNAME=${DB_USERNAME}
ARG SEARCH_HOST
ENV SEARCH_HOST=${SEARCH_HOST}
ARG SEARCH_ADMIN_API_KEY
ENV SEARCH_ADMIN_API_KEY=${SEARCH_ADMIN_API_KEY}
ARG SEARCH_PORT
ENV SEARCH_PORT=${SEARCH_PORT}
ARG SEARCH_PROTOCOL
ENV SEARCH_PROTOCOL=${SEARCH_PROTOCOL}
ARG WEB_BASE_URL
ENV WEB_BASE_URL=${WEB_BASE_URL}
ARG WEB_TOKEN
ENV WEB_TOKEN=${WEB_TOKEN}

CMD npx turbo run dev --filter=@recipes/api