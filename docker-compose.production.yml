version: '3'

services:
  recipes-api:
    container_name: recipes-api
    image: strapi:4.13.6
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.production
      args:
        API_ADMIN_JWT_SECRET: ${API_ADMIN_JWT_SECRET}
        API_APP_KEYS: ${API_APP_KEYS}
        API_HOST: ${API_HOST}
        API_JWT_SECRET: ${API_JWT_SECRET}
        API_PORT: ${API_PORT}
        API_TOKEN_SALT: ${API_TOKEN_SALT}
        API_TRANSFER_TOKEN_SALT: ${API_TRANSFER_TOKEN_SALT}
        DB_HOST: ${DB_HOST}
        DB_NAME: ${DB_NAME}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_PORT: ${DB_PORT}
        DB_USERNAME: ${DB_USERNAME}
        NODE_ENV: ${NODE_ENV}
    volumes:
      - ./apps/api/config:/app/apps/api/config
      - ./apps/api/public/uploads:/app/apps/api/public/uploads
      - ./apps/api/src:/app/apps/api/src
    restart: unless-stopped
    ports:
      - '1337:1337'
    networks:
      - recipes-network
    depends_on:
      - recipes-db

  recipes-db:
    container_name: recipes-db
    platform: linux/amd64
    image: postgres:14.0-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    volumes:
      - recipes-data:/var/lib/postgresql/data/
    restart: unless-stopped
    ports:
      - '5432:5432'
    networks:
      - recipes-network

  recipes-web:
    container_name: recipes-web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile.production
      args:
        NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED}
        NODE_ENV: ${NODE_ENV}
    volumes:
      - ./apps/web/public:/app/apps/web/public
      - ./apps/web/src:/app/apps/web/src
    restart: always
    ports:
      - 3000:3000
    networks:
      - recipes-network

volumes:
  recipes-data:

networks:
  recipes-network:
    driver: bridge
